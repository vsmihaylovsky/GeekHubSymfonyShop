<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function getProductsWithPictures()
    {
         return $query = $this->createQueryBuilder('p')
            ->select('p, pic')
            ->leftJoin('p.pictures', 'pic')
            ->orderBy('p.createdAt', 'DESC')
            ->getQuery();
    }

    public function getProductWithJoins($slug)
    {
        return $this->createQueryBuilder('p')
            ->select('p, pic, rev')
            ->leftJoin('p.pictures', 'pic')
            ->leftJoin('p.reviews', 'rev')
            ->where('p.slug = ?1')
            ->setParameter(1, $slug)
            ->getQuery()
            ->getSingleResult();
    }

    public function getLatestProductsWithPictures($max = 9)
    {
        return $this->createQueryBuilder('p')
            ->select('p, pic')
            ->leftJoin('p.pictures', 'pic')
            ->orderBy('p.createdAt', 'DESC')
            ->setFirstResult(1)
            ->setMaxResults($max)
            ->getQuery()
            ->getResult();
    }

    public function getFilteredProductsWithPictures($filter, $param)
    {
        $query = $this->createQueryBuilder('p')
            ->select('p, pic, cat')
            ->leftJoin('p.pictures', 'pic')
            ->leftJoin('p.category', 'cat')
            ->orderBy('p.createdAt', 'DESC');

        switch ($filter) {
            case 'category':
                $query
                    ->where('cat.slug = ?1')
                    ->setParameter(1, $param);
                break;

        }

        return $query->getQuery();
    }
}
